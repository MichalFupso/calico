apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: calico-ci-
  labels:
    repo: calico
    type: CI
    branch: argoci-testing
spec:
  entrypoint: all-steps
  nodeSelector:
    role: docker-argoci
  volumes:
    - name: dind-storage
      emptyDir: {}
  arguments:
    parameters:
      - name: reponame
        value: calico
      - name: repoURL
        value: git@github.com:projectcalico/calico.git
      - name: branch
        value: argoci-testing
  templateDefaults:
    podSpecPatch: |-
      containers:
        - name: main
          env:
            - name: CI_HOME
              value: /src
            - name: CI_GIT_DIR
              value: calico
            - name: CI_ARTIFACT_STEP_STORAGE
              value: gs://argoci-artifacts/{{workflow.name}}/{{tasks.name}}
            - name: DOCKER_HOST
              value: tcp://127.0.0.1:2375
            - name: CI_GIT_REPO_URL
              value: {{workflow.parameters.repoURL}}
            - name: CI_GIT_CLONED_BRANCH
              value: {{workflow.parameters.branch}}
          envFrom: 
            - secretRef:
                name: docker-hub
            - secretRef:
                name: marvin-github-ssh-private-key
  templates:
    - name: all-steps
      dag:
        tasks:
          - name: prerequisites
            template: preflight-checks-runner
          - name: node-tests
            depends: "prerequisites"
            template: node-tests-runner
            arguments:
              parameters:
                - name: make-command
                  value: "{{item.MAKE_CMD}}"
                - name: report-file
                  value: "{{item.REPORT_FILE}}"
            withItems:
              - {"MAKE_CMD": "ci", "REPORT_FILE": "nosetests.xml"}
              - {"MAKE_CMD": "k8s-test", "REPORT_FILE": "k8s-tests.xml"}

    - name: preflight-checks-runner
      script:
        image: gcr.io/tigera-cc-dev/ci-base/calico-ci-image:v0.1
        imagePullPolicy: Always
        command: [bash]
        workingDir: "/src"
        source: |
          source checkout
          CI_EXIT_CODE=0
          source .argoci/scripts/global_prologue.sh
          until docker ps; do sleep 5; done
          make ci-preflight-checks || CI_EXIT_CODE=1
          /src/calico/.argoci/scripts/global_epilogue.sh
          exit ${CI_EXIT_CODE}
        volumeMounts:
          - name: src
            mountPath: /src
      volumes:
        - name: src
          emptyDir: { }
      sidecars:
        - name: dind
          image: docker:20.10.17-dind
          command: [dockerd-entrypoint.sh]
          env:
            - name: DOCKER_TLS_CERTDIR
              value: ""
          securityContext:
            privileged: true
          mirrorVolumeMounts: true
          volumeMounts:
            - name: dind-storage
              mountPath: /var/lib/docker

    - name: node-tests-runner
      inputs:
        parameters:
          - name: make-command
          - name: report-file
      script:
        image: gcr.io/tigera-cc-dev/ci-base/calico-ci-image:v0.1
        imagePullPolicy: Always
        command: [bash]
        workingDir: "/src"
        source: |
          source checkout
          CI_EXIT_CODE=0
          source .argoci/scripts/global_prologue.sh
          cd node
          until docker ps; do sleep 5; done
          ../.argoci/scripts/run-and-monitor {{inputs.parameters.make-command}}.log make {{inputs.parameters.make-command}} || CI_EXIT_CODE=1
          gsutil cp "./report/{{inputs.parameters.report-file}}" "${CI_ARTIFACT_STEP_STORAGE}/node-{{inputs.parameters.make-command}}"
          /src/calico/.argoci/scripts/global_epilogue.sh
          exit ${CI_EXIT_CODE}
        volumeMounts:
          - name: src
            mountPath: /src
      sidecars:
        - name: dind
          image: docker:20.10.17-dind
          command: [dockerd-entrypoint.sh]
          env:
            - name: DOCKER_TLS_CERTDIR
              value: ""
          securityContext:
            privileged: true
          mirrorVolumeMounts: true
          volumeMounts:
            - name: dind-storage
              mountPath: /var/lib/docker
      volumes:
        - name: src
          ephemeral:
            volumeClaimTemplate:
              spec:
                accessModes: [ "ReadWriteOnce" ]
                resources:
                  requests:
                    storage: 50Gi
